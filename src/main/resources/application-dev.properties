# prints sql statements on the console
spring.jpa.show-sql=false

# formats sql for readability
spring.jpa.properties.hibernate.format_sql=true

# none: No database Schema initialization
# create: Drops and creates the schema at the application startup.
#         With this option, all your data will be gone on each startup.
# create-drop: Creates schema at the startup and destroys the schema on context closure. Useful for unit tests.
# validate: Only checks if the Schema matches the Entities. If the schema does not match, then the application
#           startup will fail. Makes no changes to the database.
# update: Updates the schema only if necessary. For example, If a new field was added in an entity, then it will
#         simply alter the table for a new column without destroying the data.
spring.jpa.hibernate.ddl-auto=create-drop
# use data.sql script
spring.sql.init.mode=always
# defer data.sql script until after hibernate creates schema from entities
spring.jpa.defer-datasource-initialization=true

# H2 setup
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
